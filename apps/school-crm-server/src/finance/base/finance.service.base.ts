/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { PrismaService } from "../../prisma/prisma.service";
import { Prisma, Finance as PrismaFinance } from "@prisma/client";

export class FinanceServiceBase {
  constructor(protected readonly prisma: PrismaService) {}

  async count(args: Omit<Prisma.FinanceCountArgs, "select">): Promise<number> {
    return this.prisma.finance.count(args);
  }

  async finances<T extends Prisma.FinanceFindManyArgs>(
    args: Prisma.SelectSubset<T, Prisma.FinanceFindManyArgs>
  ): Promise<PrismaFinance[]> {
    return this.prisma.finance.findMany<Prisma.FinanceFindManyArgs>(args);
  }
  async finance<T extends Prisma.FinanceFindUniqueArgs>(
    args: Prisma.SelectSubset<T, Prisma.FinanceFindUniqueArgs>
  ): Promise<PrismaFinance | null> {
    return this.prisma.finance.findUnique(args);
  }
  async createFinance<T extends Prisma.FinanceCreateArgs>(
    args: Prisma.SelectSubset<T, Prisma.FinanceCreateArgs>
  ): Promise<PrismaFinance> {
    return this.prisma.finance.create<T>(args);
  }
  async updateFinance<T extends Prisma.FinanceUpdateArgs>(
    args: Prisma.SelectSubset<T, Prisma.FinanceUpdateArgs>
  ): Promise<PrismaFinance> {
    return this.prisma.finance.update<T>(args);
  }
  async deleteFinance<T extends Prisma.FinanceDeleteArgs>(
    args: Prisma.SelectSubset<T, Prisma.FinanceDeleteArgs>
  ): Promise<PrismaFinance> {
    return this.prisma.finance.delete(args);
  }
}
